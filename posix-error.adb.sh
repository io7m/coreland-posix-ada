#!/bin/sh

cat LICENSE || exit 1
cat <<EOF

--
-- Auto generated, do not edit.
--

package body POSIX.Error is

EOF

echo '  -- Errno values (generated by errno_constants.lua)'
./errno_constants.lua errno_to_int.map || exit 1
echo
echo '  -- Errno mappings (generated by errno_map.lua)'
./errno_map.lua errno_to_int.map errno_to_ada.map || exit 1

cat <<EOF

  --
  -- Map error value to locale-specific error message.
  -- XXX: Implement over strerror_r
  --

  procedure Message
    (Value  : in Error_t;
     Buffer : out String)
  is
    Upper_Bound : Positive;
    Error_Image : constant String := Error_t'Image (Value);
  begin
    Upper_Bound := Error_Image'Last;

    if Upper_Bound > Buffer'Last then
      Upper_Bound := Buffer'Last;
    end if;

    Buffer (Buffer'First .. Upper_Bound) :=
      Error_Image (Error_Image'First .. Upper_Bound);
  end Message;

  function Get_Error return Error_t is
  begin
    return Errno_To_Ada (Errno_Get);
  end Get_Error;

end POSIX.Error;
EOF
